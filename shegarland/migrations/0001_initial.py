# Generated by Django 5.1.1 on 2024-11-04 16:12

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PasswordResetRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShegarLandForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Kutaamagaalaa', models.CharField(choices=[('Sulultaa', 'Sulultaa'), ('M/Abbichuu', 'M/Abbichuu'), ('L/Xafoo L/Dadhii', 'L/Xafoo L/Dadhii'), ('K/Jiddaa', 'K/Jiddaa'), ('K/faccee', 'K/faccee'), ('Galaan', 'Galaan'), ('Furii', 'Furii'), ('G/Guddaa', 'G/Guddaa'), ('Sabbataa', 'Sabbataa'), ('M/Nonnoo', 'M/Nonnoo'), ('G/Gujee', 'G/Gujee'), ('Burrayyuu', 'Burrayyuu')], default='kutamagaalaa', max_length=50)),
                ('Aanaa', models.CharField(choices=[('Abbaa Gadaa', 'Abbaa Gadaa'), ('wasarbii', 'wasarbii'), ('Tufaa munaa', 'Tufaa munaa'), ('A/M/Abbichuu', 'A/M/Abbichuu'), ('Eekkaa Daallee', 'Eekkaa Daallee'), ('Lagaa Dambal', 'Lagaa Dambal'), ('Ekkaa Sadeen', 'Ekkaa Sadeen'), ('Haroo Qullit', 'Haroo Qullit'), ('Dire_Sokkoruu', 'Dire Sokorruu'), ('Kuraa Jidda', 'Kuraa Jidda'), ('Galaan Arabsaa', 'Galaan Arabsaa'), ('Galaan Goraa', 'Galaan Goraa'), ('Faccee', 'Faccee'), ('Siidaa awaash', 'Siidaa awaash'), ('Galaan', 'Galaan'), ('Andoodee', 'Andoodee'), ('Mudaa Furii', 'Mudaa Furii'), ('Caffe karaabuu', 'Caffe karaabuu'), ('Gadaa Faajjii', 'Gadaa Faajjii'), ('Galaan Guddaa', 'Galaan Guddaa'), ('Lakkulee gejjaa', 'Lakkulee gejjaa'), ('Daalattii', 'Daalattii'), ('Wacacaa', 'Wacacaa'), ('Mogolee', 'Mogolee'), ('Caffee', 'Caffee'), ('M/gafarsaa', 'M/gafarsaa'), ('Nonnoo', 'Nonnoo'), ('Beeroo', 'Beeroo'), ('B/Kattaa', 'B/Kattaa'), ('L/kattaa', 'L/kattaa'), ('A/diimaa', 'A/diimaa'), ('G/burrayyuu', 'G/burrayyuu'), ('Egduu ilalaa', 'Egduu ilalaa'), ('Gujee', 'Gujee'), ('Koloboo', 'Koloboo')], default='Aanaa', max_length=50)),
                ('iddo_adda', models.CharField(blank=True, max_length=30, null=True)),
                ('lakk_adda', models.IntegerField(blank=True, default=0, null=True)),
                ('gosa_tajajila', models.CharField(blank=True, choices=[('Mana Jireenyaa', 'Mana Jireenyaa'), ('Daldala', 'Daldala'), ('Tajajilaa Bulchiinsaa', 'Tajajilaa Bulchiinsaa'), ('Tajajilaa Haw.', 'Tajajilaa Haw.'), ('Industirii/Investimenti/', 'Industirii/Investimenti/'), ('Iddoo Bashannanaa', 'Iddoo Bashannanaa'), ('Magarisumma', 'Magarisumma'), ('Lafa Bosona', 'Lafa Bosona'), ('Duwwaa/Open-Space/', 'Duwwaa/Open-Space/'), ('Qonnaa', 'Qonnaa'), ('Dhedicha', 'Dhedicha'), ('Iddo ISAn Digame', 'Iddo ISAn Digame'), ('Lafa Albudaa/Quarry Site/', 'Lafa Albudaa/Quarry Site/'), ('Kan biroo', 'Kan biroo')], max_length=50, null=True)),
                ('madda_lafa', models.CharField(choices=[('ISA Digame', 'ISA Digame'), ('Waligalten kan cite', 'Waligalten kan cite'), ('Lafa motumma', 'Lafa motumma'), ('Lafa walini', 'Lafa walini'), ('Lafa benyan itti kaffalame', 'Lafa benyan itti kaffalame'), ("Lafa seran ala qabame bankitti debi'e", "Lafa seran ala qabame bankitti debi'e"), ('kan biroo', 'kan biroo')], max_length=50)),
                ('tajajila_iddo', models.CharField(choices=[('Adminstration/AD/', 'Administration/AD/'), ('Commercial/CO/', 'Commercial/CO/'), ('Eco_Tourism/RE-5/', 'Eco_Tourism/RE-5/'), ('Formal Green', 'Formal Green'), ('Recreational & Environmental/RE/', 'Recreational & Environmental/RE/'), ('Open Spaces and Sport Centers', 'Open Spaces and Sport Centers'), ('Pure Residence/R/', 'Pure Residence/R/'), ('Mixid Residence/R-2/', 'Mixid Residence/R-2/'), ('Manufacturing and Storage/P-1/', 'Manufacturing and Storage/P-1/'), ('Social Service/S/', 'Social Service/S/'), ('Special Function', 'Special Function'), ('Special residence', 'Special residence'), ('Transport', 'Transport'), ('Urban Agriculture/UA/', 'Urban Agriculture'), ('Logestic and Free Trade Zone', 'Logestic and Free Trade Zone'), ('River and Arteficial Lake', 'River and Arteficial Lake'), ('High Density Mixed Residence', 'High Density Mixed Residence')], max_length=60)),
                ('haala_beenya', models.CharField(choices=[('Bilisaa', 'Bilisaa'), ('Beenyaa kan qabu', 'Beenyaa kan qabu')], default='haala benyaa', max_length=20)),
                ('qamaa_qophaef', models.CharField(blank=True, max_length=50, null=True)),
                ('tajajila_qophaef', models.CharField(choices=[('Bankii Lafa', 'Bankii Lafa'), ('Mana jirenya', 'Mana jirenya'), ('Daldala', 'Daldala'), ('Tajajilaa Bulchi', 'Tajajilaa Bulchi'), ('Tajajilaa Haw.', 'Tajajilaa Haw.'), ('Investimenti', 'Investimenti'), ('IMX', 'IMX'), ('Magarisumma', 'Magarisumma'), ('Innishetivif', 'Innishetivif'), ('Tajajila babalifanna', 'Tajajila babalifanna'), ('Qonnaa', 'Qonnaa'), ('Tajajila yeroof', 'Tajajila yeroof'), ('Tajaajila Babal', 'Tajaajila Babal')], max_length=50)),
                ('balina_lafa', models.DecimalField(decimal_places=3, default=0.0, max_digits=10)),
                ('kan_qophesse', models.CharField(blank=True, default='user', max_length=40, null=True)),
                ('guyya_qophae', models.DateField(default=django.utils.timezone.now)),
                ('guyya_galmae', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('shapefile', models.FileField(upload_to='shapefiles/')),
                ('Ragaa_biroo', models.ImageField(default='Site dukademtu xal. fi raga biroo', upload_to='images/')),
                ('ragaittin_bahi_tae', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('Mallattoo', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('guyyaa_bahi_tae', models.DateField(blank=True, null=True)),
                ('bal_lafa_bahi_tae', models.DecimalField(decimal_places=3, default=0.0, max_digits=10)),
                ('bal_lafa_hafe', models.DecimalField(decimal_places=3, default=0.0, max_digits=10)),
                ('qaama_bahi_tahef', models.CharField(blank=True, max_length=40, null=True)),
                ('tajajila_bahi_tahef', models.CharField(blank=True, max_length=40, null=True)),
                ('kan_bahi_taasise', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, max_length=150, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['email'],
                'permissions': (('can_view_user', 'Can view user'),),
                'unique_together': {('email',)},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
